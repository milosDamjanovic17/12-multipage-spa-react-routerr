{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MD250709\\\\OneDrive - NCR Corporation\\\\Desktop\\\\12-multipage-spa-react-routerr\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData(); // since we defined resData.events in loader function inside EventsData element in Router\n  const events = data.events;\n  if (data.isError) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\n\n// fetch the data with async function\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    return {\n      isError: true,\n      message: 'Could not fetch events.'\n    };\n  } else {\n    return response; // response returns Promise obj\n  }\n}\n\n;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","isError","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","message","$RefreshReg$"],"sources":["C:/Users/MD250709/OneDrive - NCR Corporation/Desktop/12-multipage-spa-react-routerr/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useLoaderData } from 'react-router-dom';\r\n\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n\r\n   const data = useLoaderData(); // since we defined resData.events in loader function inside EventsData element in Router\r\n   const events = data.events;\r\n\r\n   if(data.isError)\r\n\r\n  return (\r\n    <>\r\n      <EventsList events={events} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\n// fetch the data with async function\r\nexport async function loader() {\r\n   const response = await fetch('http://localhost:8080/events');\r\n\r\n   if(!response.ok){\r\n     return({isError: true, message: 'Could not fetch events.'});\r\n   }else{\r\n     return response; // response returns Promise obj\r\n   }\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEnB,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC,CAAC,CAAC;EAC9B,MAAMS,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE1B,IAAGD,IAAI,CAACE,OAAO,EAEhB,oBACEP,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACER,OAAA,CAACF,UAAU;MAACQ,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACR,EAAA,CAZQD,UAAU;EAAA,QAEHN,aAAa;AAAA;AAAAgB,EAAA,GAFpBV,UAAU;AAcnB,eAAeA,UAAU;;AAEzB;AACA,OAAO,eAAeW,MAAMA,CAAA,EAAG;EAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;IACd,OAAO;MAACV,OAAO,EAAE,IAAI;MAAEW,OAAO,EAAE;IAAyB,CAAC;EAC5D,CAAC,MAAI;IACH,OAAOH,QAAQ,CAAC,CAAC;EACnB;AACH;;AAAC;AAAC,IAAAF,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}