{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MD250709\\\\OneDrive - NCR Corporation\\\\Desktop\\\\12-multipage-spa-react-routerr\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData(); // since we defined resData.events in loader function inside EventsData element in Router\n  const events = data.events;\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //  throw new Response(JSON.stringify({\n    //     message: 'Could not fetch events!'}), {\n    //     status: 500,\n    //   });\n    throw json({\n      message: 'Could not fetch events'\n    }, {\n      status: 500\n    });\n  } else {\n    return response; // response returns Promise obj\n  }\n}\n\n// fetch the data with async function\nexport async function loader() {}\n;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","status","loader","$RefreshReg$"],"sources":["C:/Users/MD250709/OneDrive - NCR Corporation/Desktop/12-multipage-spa-react-routerr/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useLoaderData, json } from 'react-router-dom';\r\n\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n\r\n   const data = useLoaderData(); // since we defined resData.events in loader function inside EventsData element in Router\r\n   const events = data.events;\r\n\r\n   if(data.isError){\r\n    return <p>{data.message}</p>\r\n   }\r\n\r\n  return (\r\n    <>\r\n      <EventsList events={events} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loadEvents(){\r\n\r\n  const response = await fetch('http://localhost:8080/events');\r\n\r\n  if(!response.ok){\r\n   //  throw new Response(JSON.stringify({\r\n   //     message: 'Could not fetch events!'}), {\r\n   //     status: 500,\r\n   //   });\r\n   throw json({message: 'Could not fetch events'},\r\n     {status: 500},\r\n   );\r\n  }else{\r\n    return response; // response returns Promise obj\r\n  }\r\n\r\n}\r\n\r\n// fetch the data with async function\r\nexport async function loader() {\r\n\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAEtD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEnB,MAAMC,IAAI,GAAGT,aAAa,CAAC,CAAC,CAAC,CAAC;EAC9B,MAAMU,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE1B,IAAGD,IAAI,CAACE,OAAO,EAAC;IACf,oBAAOP,OAAA;MAAAQ,QAAA,EAAIH,IAAI,CAACI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC7B;EAED,oBACEb,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACER,OAAA,CAACF,UAAU;MAACQ,MAAM,EAAEA;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACT,EAAA,CAdQD,UAAU;EAAA,QAEHP,aAAa;AAAA;AAAAkB,EAAA,GAFpBX,UAAU;AAgBnB,eAAeA,UAAU;AAEzB,OAAO,eAAeY,UAAUA,CAAA,EAAE;EAEhC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;IACf;IACA;IACA;IACA;IACA,MAAMrB,IAAI,CAAC;MAACY,OAAO,EAAE;IAAwB,CAAC,EAC5C;MAACU,MAAM,EAAE;IAAG,CACd,CAAC;EACF,CAAC,MAAI;IACH,OAAOH,QAAQ,CAAC,CAAC;EACnB;AAEF;;AAEA;AACA,OAAO,eAAeI,MAAMA,CAAA,EAAG,CAE/B;AAAC;AAAC,IAAAN,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}