{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MD250709\\\\OneDrive - NCR Corporation\\\\Desktop\\\\12-multipage-spa-react-routerr\\\\frontend\\\\src\\\\pages\\\\EditEventPage.js\",\n  _s = $RefreshSig$();\nimport { useParams, useLoaderData, useRouteLoaderData } from \"react-router-dom\";\nimport EventForm from '../components/EventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EditEventPage() {\n  _s();\n  const data = useRouteLoaderData('event-detail');\n  const passedParam = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit event page!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" You are currently editing event: \", passedParam.eventId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(EventForm, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n}\n_s(EditEventPage, \"A2zB0mgvwSOa5FyTB5QTkHgQWKI=\", false, function () {\n  return [useRouteLoaderData, useParams];\n});\n_c = EditEventPage;\n;\nexport default EditEventPage;\nexport async function action(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EditEventPage\");","map":{"version":3,"names":["useParams","useLoaderData","useRouteLoaderData","EventForm","jsxDEV","_jsxDEV","Fragment","_Fragment","EditEventPage","_s","data","passedParam","children","fileName","_jsxFileName","lineNumber","columnNumber","eventId","event","_c","action","_ref","request","params","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","status","ok","json","message","redirect","$RefreshReg$"],"sources":["C:/Users/MD250709/OneDrive - NCR Corporation/Desktop/12-multipage-spa-react-routerr/frontend/src/pages/EditEventPage.js"],"sourcesContent":["import { useParams, useLoaderData, useRouteLoaderData } from \"react-router-dom\";\r\nimport EventForm from '../components/EventForm';\r\n\r\nfunction EditEventPage() {\r\n\r\n   const data = useRouteLoaderData('event-detail');\r\n\r\n   const passedParam = useParams();\r\n\r\n   return(\r\n      <>\r\n         <h1>Edit event page!</h1>\r\n         <p> You are currently editing event: {passedParam.eventId}</p>\r\n         \r\n         <EventForm event={data.event}/>\r\n      </>\r\n   );\r\n\r\n};\r\n\r\nexport default EditEventPage;\r\n\r\n\r\nexport async function action({request, params}) {\r\n\r\n   const data = await request.formData();\r\n\r\n   const eventData = {\r\n      title: data.get('title'),\r\n      image: data.get('image'),\r\n      date: data.get('date'),\r\n      description: data.get('description'),\r\n   }\r\n\r\n   const response = await fetch('http://localhost:8080/events', {\r\n      method: 'POST',\r\n      headers: {\r\n         'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(eventData),\r\n   })\r\n\r\n   if(response.status === 422){\r\n      return response;\r\n   }\r\n\r\n   if(!response.ok){\r\n      throw json({message: 'Could not save event.'}, {status: 500})\r\n   }\r\n\r\n   return redirect('/events');\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,aAAa,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC/E,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAEtB,MAAMC,IAAI,GAAGR,kBAAkB,CAAC,cAAc,CAAC;EAE/C,MAAMS,WAAW,GAAGX,SAAS,CAAC,CAAC;EAE/B,oBACGK,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACGP,OAAA;MAAAO,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBX,OAAA;MAAAO,QAAA,GAAG,oCAAkC,EAACD,WAAW,CAACM,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE9DX,OAAA,CAACF,SAAS;MAACe,KAAK,EAAER,IAAI,CAACQ;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAChC,CAAC;AAGT;AAACP,EAAA,CAfQD,aAAa;EAAA,QAENN,kBAAkB,EAEXF,SAAS;AAAA;AAAAmB,EAAA,GAJvBX,aAAa;AAerB;AAED,eAAeA,aAAa;AAG5B,OAAO,eAAeY,MAAMA,CAAAC,IAAA,EAAoB;EAAA,IAAnB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAE3C,MAAMX,IAAI,GAAG,MAAMY,OAAO,CAACE,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IACfC,KAAK,EAAEhB,IAAI,CAACiB,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAElB,IAAI,CAACiB,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEnB,IAAI,CAACiB,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEpB,IAAI,CAACiB,GAAG,CAAC,aAAa;EACtC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC1DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACN,cAAc,EAAE;IACnB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EACjC,CAAC,CAAC;EAEF,IAAGM,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAC;IACxB,OAAOP,QAAQ;EAClB;EAEA,IAAG,CAACA,QAAQ,CAACQ,EAAE,EAAC;IACb,MAAMC,IAAI,CAAC;MAACC,OAAO,EAAE;IAAuB,CAAC,EAAE;MAACH,MAAM,EAAE;IAAG,CAAC,CAAC;EAChE;EAEA,OAAOI,QAAQ,CAAC,SAAS,CAAC;AAC7B;AAAC,IAAAvB,EAAA;AAAAwB,YAAA,CAAAxB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}