{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MD250709\\\\OneDrive - NCR Corporation\\\\Desktop\\\\12-multipage-spa-react-routerr\\\\frontend\\\\src\\\\pages\\\\NewEventPage.js\";\nimport { json, redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n}\n_c = NewEventPage;\n;\nexport default NewEventPage;\nexport async function action(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","redirect","EventForm","jsxDEV","_jsxDEV","Fragment","_Fragment","NewEventPage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","status","ok","message","$RefreshReg$"],"sources":["C:/Users/MD250709/OneDrive - NCR Corporation/Desktop/12-multipage-spa-react-routerr/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import { json, redirect } from \"react-router-dom\";\r\nimport EventForm from \"../components/EventForm\";\r\n\r\nfunction NewEventPage() {\r\n\r\n\r\n   return(\r\n      <>\r\n         <EventForm />\r\n      </>\r\n   );\r\n\r\n};\r\n\r\nexport default NewEventPage;\r\n\r\n\r\nexport async function action({request, params}) {\r\n\r\n   const data = await request.formData();\r\n\r\n   const eventData = {\r\n      title: data.get('title'),\r\n      image: data.get('image'),\r\n      date: data.get('date'),\r\n      description: data.get('description'),\r\n   }\r\n\r\n   const response = await fetch('http://localhost:8080/events', {\r\n      method: 'POST',\r\n      headers: {\r\n         'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(eventData),\r\n   })\r\n\r\n   if(response.status === 422){\r\n      return response;\r\n   }\r\n\r\n   if(!response.ok){\r\n      throw json({message: 'Could not save event.'}, {status: 500})\r\n   }\r\n\r\n   return redirect('/events');\r\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EAGrB,oBACGH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACGJ,OAAA,CAACF,SAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACd,CAAC;AAGT;AAACC,EAAA,GATQN,YAAY;AASpB;AAED,eAAeA,YAAY;AAG3B,OAAO,eAAeO,MAAMA,CAAAC,IAAA,EAAoB;EAAA,IAAnB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAE3C,MAAMG,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IACfC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACtC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC1DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACN,cAAc,EAAE;IACnB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EACjC,CAAC,CAAC;EAEF,IAAGM,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAC;IACxB,OAAOP,QAAQ;EAClB;EAEA,IAAG,CAACA,QAAQ,CAACQ,EAAE,EAAC;IACb,MAAMlC,IAAI,CAAC;MAACmC,OAAO,EAAE;IAAuB,CAAC,EAAE;MAACF,MAAM,EAAE;IAAG,CAAC,CAAC;EAChE;EAEA,OAAOhC,QAAQ,CAAC,SAAS,CAAC;AAC7B;AAAC,IAAAY,EAAA;AAAAuB,YAAA,CAAAvB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}