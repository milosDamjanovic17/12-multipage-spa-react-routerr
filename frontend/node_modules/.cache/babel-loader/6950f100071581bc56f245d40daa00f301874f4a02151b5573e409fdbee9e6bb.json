{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MD250709\\\\OneDrive - NCR Corporation\\\\Desktop\\\\12-multipage-spa-react-routerr\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json, defer, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData(); // since we defined resData.events in loader function inside EventsData element in Router\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: data.events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        children: loadEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //  throw new Response(JSON.stringify({\n    //     message: 'Could not fetch events!'}), {\n    //     status: 500,\n    //   });\n    throw json({\n      message: 'Could not fetch events'\n    }, {\n      status: 500\n    });\n  } else {\n    return response; // response returns Promise obj\n  }\n}\n\n// fetch the data with async function\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\n;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","children","resolve","events","loadedEvents","loadEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["C:/Users/MD250709/OneDrive - NCR Corporation/Desktop/12-multipage-spa-react-routerr/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useLoaderData, json, defer, Await } from 'react-router-dom';\r\n\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n\r\n   const data = useLoaderData(); // since we defined resData.events in loader function inside EventsData element in Router\r\n\r\n   \r\n\r\n  return (\r\n    <>\r\n      <Await resolve={data.events}>\r\n\r\n        {(loadedEvents) => <EventsList>{loadEvents}</EventsList> }\r\n\r\n      </Await>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loadEvents(){\r\n\r\n  const response = await fetch('http://localhost:8080/events');\r\n\r\n  if(!response.ok){\r\n   //  throw new Response(JSON.stringify({\r\n   //     message: 'Could not fetch events!'}), {\r\n   //     status: 500,\r\n   //   });\r\n   throw json({message: 'Could not fetch events'},\r\n     {status: 500},\r\n   );\r\n  }else{\r\n    return response; // response returns Promise obj\r\n  }\r\n\r\n}\r\n\r\n// fetch the data with async function\r\nexport function loader() {\r\n  return defer({\r\n    events: loadEvents()\r\n  })\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AAEpE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEnB,MAAMC,IAAI,GAAGX,aAAa,CAAC,CAAC,CAAC,CAAC;;EAI/B,oBACEM,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACH,KAAK;MAACU,OAAO,EAAEF,IAAI,CAACG,MAAO;MAAAF,QAAA,EAExBG,YAAY,iBAAKT,OAAA,CAACF,UAAU;QAAAQ,QAAA,EAAEI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEnD;EAAC,gBACR,CAAC;AAEP;AAACV,EAAA,CAfQD,UAAU;EAAA,QAEHT,aAAa;AAAA;AAAAqB,EAAA,GAFpBZ,UAAU;AAiBnB,eAAeA,UAAU;AAEzB,OAAO,eAAeO,UAAUA,CAAA,EAAE;EAEhC,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;IACf;IACA;IACA;IACA;IACA,MAAMvB,IAAI,CAAC;MAACwB,OAAO,EAAE;IAAwB,CAAC,EAC5C;MAACC,MAAM,EAAE;IAAG,CACd,CAAC;EACF,CAAC,MAAI;IACH,OAAOJ,QAAQ,CAAC,CAAC;EACnB;AAEF;;AAEA;AACA,OAAO,SAASK,MAAMA,CAAA,EAAG;EACvB,OAAOzB,KAAK,CAAC;IACXY,MAAM,EAAEE,UAAU,CAAC;EACrB,CAAC,CAAC;AACJ;AAAC;AAAC,IAAAK,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}