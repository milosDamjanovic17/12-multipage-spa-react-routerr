{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MD250709\\\\OneDrive - NCR Corporation\\\\Desktop\\\\12-multipage-spa-react-routerr\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const fetchedEvents = useLoaderData(); // since we defined resData.events in loader function inside EventsData element in Router\n  const eventsExtr = fetchedEvents.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: eventsExtr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"Y6unLtj4H01/usbxx3TTTC6MqkY=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\n\n// fetch the data with async function\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // incorrect case\n  } else {\n    const resData = await response.json();\n    return response;\n  }\n  ;\n}\n;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","fetchedEvents","eventsExtr","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","resData","json","$RefreshReg$"],"sources":["C:/Users/MD250709/OneDrive - NCR Corporation/Desktop/12-multipage-spa-react-routerr/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useLoaderData } from 'react-router-dom';\r\n\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n\r\n   const fetchedEvents = useLoaderData(); // since we defined resData.events in loader function inside EventsData element in Router\r\n   const eventsExtr = fetchedEvents.events;\r\n\r\n  return (\r\n    <>\r\n      <EventsList events={eventsExtr} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\n// fetch the data with async function\r\nexport async function loader() {\r\n   const response = await fetch('http://localhost:8080/events');\r\n\r\n   if(!response.ok){\r\n     // incorrect case\r\n   }else{\r\n    const resData = await response.json();\r\n     return response;\r\n   };\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEnB,MAAMC,aAAa,GAAGR,aAAa,CAAC,CAAC,CAAC,CAAC;EACvC,MAAMS,UAAU,GAAGD,aAAa,CAACE,MAAM;EAExC,oBACEP,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACER,OAAA,CAACF,UAAU;MAACS,MAAM,EAAED;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAClC,CAAC;AAEP;AAACR,EAAA,CAVQD,UAAU;EAAA,QAEMN,aAAa;AAAA;AAAAgB,EAAA,GAF7BV,UAAU;AAYnB,eAAeA,UAAU;;AAEzB;AACA,OAAO,eAAeW,MAAMA,CAAA,EAAG;EAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;IACd;EAAA,CACD,MAAI;IACJ,MAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACpC,OAAOJ,QAAQ;EACjB;EAAC;AACJ;AAAC;AAAC,IAAAF,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}