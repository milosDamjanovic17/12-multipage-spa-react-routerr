{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TEISTU\\\\Desktop\\\\12-multipage-spa-react-routerr\\\\frontend\\\\src\\\\pages\\\\EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport { Await, json, redirect, useRouteLoaderData, defer } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { Suspense } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Loading.......\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 30\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadedEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Loading.......\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 30\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          event: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n_s(EventDetailPage, \"OA7jEBfO3UI1aCR8ByPCigEHUtE=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\n\n// load one event by ID\nasync function loadEvent(eventId) {\n  const response = await fetch('http://localhost:8080/events/' + eventId);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\n\n// fetch the data with async function\nexport async function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //  throw new Response(JSON.stringify({\n    //     message: 'Could not fetch events!'}), {\n    //     status: 500,\n    //   });\n    throw json({\n      message: 'Could not fetch events'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n\n// create a new loader function to load all data related to selected event item\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId; // => via params we can access parameters that are passed to component, in this case /events/:eventId\n\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action(_ref2) {\n  let {\n    params,\n    request\n  } = _ref2;\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\n\n/**\r\n *    SINCE WE DEFINED loader in Router as: loader: {eventDetailLoader}} , {loader as eventDetailLoader} from './pages/EventDetailPage';\r\n * \r\n *    eventDetailsLoader is bind to loader function inside EventDetails page, that function will execute and return some response message,\r\n *       that response is being passed to => const data = useLoaderData() and with data object we can access the event as shown in return JSX statement <EventItem event = {data.event} />\r\n\r\n * \r\n * \r\n */\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["Await","json","redirect","useRouteLoaderData","defer","EventItem","EventsList","Suspense","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvent","loadedEvents","_c","loadEvent","eventId","response","fetch","ok","message","status","resData","loadEvents","loader","_ref","request","params","id","action","_ref2","method","$RefreshReg$"],"sources":["C:/Users/TEISTU/Desktop/12-multipage-spa-react-routerr/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import { Await, json, redirect, useRouteLoaderData, defer } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\nimport EventsList from \"../components/EventsList\";\r\nimport { Suspense } from \"react\";\r\n\r\nconst EventDetailPage = () => {\r\n\r\n   const {event, events} = useRouteLoaderData('event-detail');\r\n\r\n   return(\r\n      <>\r\n         <Suspense fallback={<p style={{textAlign: \"center\"}}>Loading.......</p>}>\r\n            <Await resolve={event}>\r\n               {(loadedEvent) => <EventItem event = {loadedEvent}/>}\r\n            </Await>\r\n         </Suspense>\r\n\r\n         <Suspense fallback={<p style={{textAlign: \"center\"}}>Loading.......</p>}>  \r\n            <Await resolve={events}>\r\n               {(loadedEvents) => <EventsList event = {loadedEvents}/>}\r\n            </Await>\r\n         </Suspense>\r\n      </>\r\n   );\r\n\r\n};\r\n\r\n\r\nexport default EventDetailPage;\r\n\r\n// load one event by ID\r\nasync function loadEvent(eventId) {\r\n\r\n   const response = await fetch('http://localhost:8080/events/' + eventId);\r\n\r\n   if(!response.ok){\r\n      throw json({message: 'Could not fetch details for selected event'},\r\n         {status: 500},\r\n      )\r\n   }else{\r\n      \r\n      const resData = await response.json();\r\n      return resData.event;\r\n   }\r\n\r\n}\r\n\r\n// fetch the data with async function\r\nexport async function loadEvents(){\r\n\r\n   const response = await fetch('http://localhost:8080/events');\r\n \r\n   if(!response.ok){\r\n    //  throw new Response(JSON.stringify({\r\n    //     message: 'Could not fetch events!'}), {\r\n    //     status: 500,\r\n    //   });\r\n    throw json({message: 'Could not fetch events'},\r\n      {status: 500},\r\n    );\r\n   }else{\r\n     const resData = await response.json();\r\n     return resData.events;\r\n   }\r\n \r\n }\r\n\r\n\r\n// create a new loader function to load all data related to selected event item\r\nexport async function loader({request, params}) {\r\n\r\n   const id = params.eventId; // => via params we can access parameters that are passed to component, in this case /events/:eventId\r\n\r\n\r\n   return defer({\r\n      event: loadEvent(id),\r\n      events: loadEvents()\r\n   })\r\n}\r\n\r\n\r\nexport async function action({params, request}) {\r\n\r\n   const eventId = params.eventId;\r\n\r\n   const response = await fetch('http://localhost:8080/events/' + eventId, {\r\n      method: request.method,\r\n   });\r\n\r\n   if(!response.ok){\r\n      throw json(\r\n         {message: 'Could not delete event'},\r\n         {status: 500,\r\n         }\r\n      )\r\n   }\r\n   return redirect('/events');\r\n}\r\n\r\n\r\n\r\n/**\r\n *    SINCE WE DEFINED loader in Router as: loader: {eventDetailLoader}} , {loader as eventDetailLoader} from './pages/EventDetailPage';\r\n * \r\n *    eventDetailsLoader is bind to loader function inside EventDetails page, that function will execute and return some response message,\r\n *       that response is being passed to => const data = useLoaderData() and with data object we can access the event as shown in return JSX statement <EventItem event = {data.event} />\r\n\r\n * \r\n * \r\n */"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}