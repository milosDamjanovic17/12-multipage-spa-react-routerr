{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TEISTU\\\\Desktop\\\\12-multipage-spa-react-routerr\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements) XXXXXX\n//    - HomePage X\n//    - EventsPage X\n//    - EventDetailPage X\n//    - NewEventPage X\n//    - EditEventPage X\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage X\n//    - /events => EventsPage \n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport EventsPage from './components/EventsPage';\nimport EventDetailPage from './components/EventDetailPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst myRouter = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 24\n  }, this)\n}, {\n  path: 'events',\n  element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 29\n  }, this)\n}, {\n  path: 'events/:eventId',\n  element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 38\n  }, this)\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: myRouter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventsPage","EventDetailPage","jsxDEV","_jsxDEV","myRouter","path","element","fileName","_jsxFileName","lineNumber","columnNumber","App","router","_c","$RefreshReg$"],"sources":["C:/Users/TEISTU/Desktop/12-multipage-spa-react-routerr/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements) XXXXXX\n//    - HomePage X\n//    - EventsPage X\n//    - EventDetailPage X\n//    - NewEventPage X\n//    - EditEventPage X\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage X\n//    - /events => EventsPage \n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport {createBrowserRouter, RouterProvider} from 'react-router-dom';\n\nimport HomePage from './components/HomePage';\nimport EventsPage from './components/EventsPage';\nimport EventDetailPage from './components/EventDetailPage';\n\nconst myRouter = createBrowserRouter([\n\n  {path: '/', element: <HomePage />},\n  {path: 'events', element: <EventsPage />},\n  {path: 'events/:eventId', element: <EventDetailPage />}\n\n])\n\nfunction App() {\n  return <RouterProvider router = {myRouter}/>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,mBAAmB,EAAEC,cAAc,QAAO,kBAAkB;AAEpE,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,eAAe,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,QAAQ,GAAGP,mBAAmB,CAAC,CAEnC;EAACQ,IAAI,EAAE,GAAG;EAAEC,OAAO,eAAEH,OAAA,CAACJ,QAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC,CAAC,EAClC;EAACL,IAAI,EAAE,QAAQ;EAAEC,OAAO,eAAEH,OAAA,CAACH,UAAU;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC,CAAC,EACzC;EAACL,IAAI,EAAE,iBAAiB;EAAEC,OAAO,eAAEH,OAAA,CAACF,eAAe;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC,CAAC,CAExD,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EACb,oBAAOR,OAAA,CAACL,cAAc;IAACc,MAAM,EAAIR;EAAS;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC9C;AAACG,EAAA,GAFQF,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}